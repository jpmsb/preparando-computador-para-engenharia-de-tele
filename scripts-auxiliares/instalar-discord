#!/bin/bash

export VERDE="\033[1;32m"
export VERMELHO="\033[1;31m"
export AMARELO="\033[1;33m"
export NORMAL="\033[0m"

export ULTIMA_VERSAO=$(curl -s 'https://discord.com/api/download?platform=linux&format=tar.gz' | grep -oP 'discord-\K\d+\.\d+\.\d+(?=\.tar\.gz)' | uniq)
export NOME="Discord"
export BINARIO="discord"
export DIR_INSTALACAO_BASE="/opt"
export DIR_INSTALACAO="$DIR_INSTALACAO_BASE/$NOME"
export URL_ARQUIVO="https://discord.com/api/download?platform=linux&format=tar.gz"
export ATUALIZACAO=false

if [ -d /opt/$NOME ]; then
    VERSAO_INSTALADA=$(grep -oP '"version":\s*"\K[^"]+' /opt/$NOME/resources/build_info.json)

    if [ "$VERSAO_INSTALADA" == "$ULTIMA_VERSAO" ]; then
        echo -e "\n${AMARELO}A versão mais recente do $NOME já está instalada.${NORMAL}"
        echo -e "Versão atual: ${VERDE}$ULTIMA_VERSAO${NORMAL}\n"

        while [[ "$RESPOSTA_INSTALAR_NOVAMENTE" != [sSnN] ]]; do
            read -p "Deseja reinstalar? [s/n] " RESPOSTA_INSTALAR_NOVAMENTE < /dev/tty
        done

        if [[ "$RESPOSTA_INSTALAR_NOVAMENTE" == [nN] ]]; then
            exit 0
        fi
    else
        echo -e "\n${VERDE}Atualizando o $NOME da versão $VERSAO_INSTALADA para $ULTIMA_VERSAO...${NORMAL}\n"
        ATUALIZACAO=true
    fi
else
    echo -e "\n${VERDE}Instalando $NOME $ULTIMA_VERSAO...${NORMAL}\n"
fi

set -e
sudo -E -- bash -c '
    echo -e "\n${VERDE}Baixando o $NOME $ULTIMA_VERSAO...${NORMAL}\n"
    ARQUIVO_BAIXADO="/tmp/$NOME.tar.gz"
    wget -q --show-progress --read-timeout=5 --tries=0 -cO ${ARQUIVO_BAIXADO} ${URL_ARQUIVO}
    rm -rf "$DIR_INSTALACAO"
    mkdir -p "$DIR_INSTALACAO"

    echo -e "\nExtraindo o arquivo baixado \"${ARQUIVO_BAIXADO}\" para \"$DIR_INSTALACAO\"...\n"
    pv ${ARQUIVO_BAIXADO} | tar -xz -C ${DIR_INSTALACAO} --strip-components=1
    rm -f /usr/local/bin/$BINARIO
    rm -f ${ARQUIVO_BAIXADO}
    chown -R $SUDO_USER: "$DIR_INSTALACAO"

    echo -e "\nCriando atalho no menu...\n"
    printf "%s\n"                              \
        "[Desktop Entry]"                      \
        "Encoding=UTF-8"                       \
        "Name=$NOME"                           \
        "Comment=$NOME"                        \
        "Exec=$BINARIO"                        \
        "Icon=$DIR_INSTALACAO/$BINARIO.png"    \
        "Terminal=false"                       \
        "Type=Application"                     \
        "Categories=Network;InstantMessaging;" \
        "StartupNotify=true" > /usr/share/applications/$BINARIO.desktop

cat > /usr/local/bin/$BINARIO <<'\''EOF'\''
#!/bin/bash

#in the file $HOME/.config/discord/settings.json
#if the setting SKIP_HOST_UPDATE does not exist add it
#otherwise leave it untouched
CONFIGFILE=$HOME/.config/discord/settings.json
EOF

echo EXE=$DIR_INSTALACAO/$NOME >> /usr/local/bin/$BINARIO

cat >> /usr/local/bin/$BINARIO <<'\''EOF'\''
if [[ -x $EXE ]]; then
    if [[ -d $HOME/.config && ! -f $CONFIGFILE ]]; then
        [[ ! -d $HOME/.config/discord ]] && mkdir $HOME/.config/discord
        echo '\''{"SKIP_HOST_UPDATE": true}'\'' >$CONFIGFILE
    elif [[ -f $CONFIGFILE ]]; then
        ! grep -qF SKIP_HOST_UPDATE $CONFIGFILE && \
          sed -i '\''/^{/s@$@\n  "SKIP_HOST_UPDATE": true,@'\'' $CONFIGFILE
    fi
    exec $EXE "$@"
fi
EOF

chmod +x /usr/local/bin/$BINARIO
'

if $ATUALIZACAO; then
    echo -e "\n${VERDE}O $NOME $ULTIMA_VERSAO foi atualizado com sucesso.${NORMAL}\n"
else
    echo -e "\n${VERDE}O $NOME $ULTIMA_VERSAO foi instalado com sucesso.${NORMAL}\n"
fi

echo -e "${VERDE}Você pode iniciar o $NOME a partir do menu ou executando o comando \"$BINARIO\" no terminal.${NORMAL}"